//to create and write in file

package learn;

import java.io.FileWriter;
import java.io.IOException;

public class Ex {
    public static void main(String[] args) {
        // Try-with-resources ensures that resources like FileWriter are closed automatically
        try (FileWriter writer = new FileWriter("myfile.txt")) {

            // Write data to the file
            writer.write("Hello, this is a simple file handling example!");

            // No need to explicitly call close(), it's done automatically
            System.out.println("Data has been written to the file!");

        } catch (IOException e) {
            // If an error occurs while writing, catch it and print the error message
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
}

=======================================================================================
package learn;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;

public class Ex {
    public static void main(String[] args) {
        try {
            // We are opening the toy box (file) "myfile.txt" to read toys (data)
            FileReader reader = new FileReader("myfile.txt");
            BufferedReader bufferedReader = new BufferedReader(reader);

            // Now we take the toys (data) out of the box (file)
            String data = bufferedReader.readLine();

            // Show the toys (data) we took out of the box (file)
            System.out.println("Data from the file: " + data);

            // Don't forget to close the toy box (file) when we are done
            bufferedReader.close();

        } catch (IOException e) {
            // If there's an error, we print it
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
}
================================================================================================================================
package learn;

import java.io.IOException;
import java.io.RandomAccessFile;

public class Filereaderreader {

    public static void main(String[] args) {
        try {
            // Writing to the file using "rw" mode (read-write)
            try (RandomAccessFile raf = new RandomAccessFile("file2.txt", "rw")) {
                // Writing some data to the file
                raf.writeUTF("Hello, this is some text in the file.");
                raf.writeInt(12345);  // Writing an integer
            }
            
            // Reading from the file using "r" mode (read-only)
            try (RandomAccessFile raf = new RandomAccessFile("file2.txt", "r")) {
                // Read the UTF string
                String text = raf.readUTF();
                System.out.println("Text read from file: " + text);
                
                // Read the integer
                int number = raf.readInt();
                System.out.println("Number read from file: " + number);
            }

            // Appending data to the file using "rw" mode
            try (RandomAccessFile raf = new RandomAccessFile("file2.txt", "rw")) {
                // Seek to the end of the file (append mode)
                raf.seek(raf.length());
                raf.writeUTF("Appended text after initial data.");
                System.out.println("Appended data to file.");
            }

            // Reading from the file again (to read the appended content)
            try (RandomAccessFile raf = new RandomAccessFile("file2.txt", "r")) {
                // Read the UTF string
                String text1 = raf.readUTF();
                System.out.println("Text read from file: " + text1);
                
                // Read the integer
                int number1 = raf.readInt();
                System.out.println("Number read from file: " + number1);
                
                // Read the appended content
                String appendedText = raf.readUTF();
                System.out.println("Appended text read from file: " + appendedText);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

