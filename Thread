
package pride;

// Implementing Runnable
class MyThread implements Runnable {
    public void run() {
        // Task for thread
        for (int i = 1; i <= 10; i++) {
            System.out.println("Value of i is " + i);
            try {
                Thread.sleep(1000);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }
}

// Extending Thread class
class MyAnotherThread extends Thread {
    public void run() {
        for (int i = 1; i <= 5; i++) {
            System.out.println("Another thread running: " + i);
            try {
                Thread.sleep(1500);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }
}

public class thr {
    public static void main(String[] args) {
        // Create object of MyThread class
        MyThread t1 = new MyThread();
        Thread th = new Thread(t1);
        
        // Object of AnotherThread
        MyAnotherThread t2 = new MyAnotherThread();

        // Start both threads
        th.start();
        t2.start();
    }
}

---------------------------------------------------------------------------------------------------
package pride;

class A extends Thread {
    public void run() {
        for (int i = 1; i <= 100; i++) {
            System.out.println("hi");
        }
    }
}

class B extends Thread {
    public void run() {
        for (int i = 1; i <= 100; i++) {
            System.out.println("hello");
        }
    }
}

public class ThreadExample {
    public static void main(String[] args) {
        A thread1 = new A();
        B thread2 = new B();
        
        thread1.start();  // Starts thread1
        thread2.start();  // Starts thread2
    }
}
-----------------------------------------------------------------------------------------
package pride;
class UserThread extends Thread{
	public void run()
	{
		//task for thread...
		System.out.println("this is user defined thread.");
	}
}
public class ThreadOp
{
	public static void main(String[] args) {
		System.out.println("program started..");	
		int x=56+34;
		System.out.println("sum is "+x);
		//Thread...
		Thread t=Thread.currentThread();
		String tname=t.getName();
		System.out.println("current running thread is "+tname);
		//setName
		t.setName("MyMain");
		System.out.println(t.getName());
		try{
			Thread.sleep(5000);
		}catch(Exception e){
		};
		System.out.println(t.getId());
		//going to start user defined thread.
		System.out.println("program ended..");	
		UserThread thread=new UserThread();
		thread.start();

	}
}

